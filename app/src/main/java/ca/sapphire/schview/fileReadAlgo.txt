Algorithm for reading Compound Document

HEADER
- Read header into Header class (512 bytes)
    - relevant info:
        - make sure it's a compound document by checking file identifier.
        - sector size (512)
        - short sector size (64)
        - number of sectors in sector allocation table
        - ID of first directory sector
        - ID of first short sector SSAT (-2 if there is no short sector table)
        - length of SSAT
        - ID of first master sector MSAT (-2 if there is no master sector table other than first 109)
        - length of MSAT
        - minimum standard stream size
        - first 109 IDs of the MSAT

MSAT
- MSAT starts in header and continues to ID of first MSAT if there is one
- MSAT chain is followed by first reading the 109 IDs in the header, then following
    the first Master Sector as identified in the Header (until -2 is encountered)
- total number of MSAT sectors is identified in the Header
- currently do not support any MSAT other than in the Header

SAT
- SAT starts in sectors as identified in the Header MSAT[0], MSAT[1] ...
- total number of SAT sectors is identified in the header.
- SecIDs are stored as ints (4 bytes) so 512/4 = 128 IDs per sector
- therefore size the SecID array as: totalSectors * (sectorSize/integerSize)
- need to read in SAT table by going through MSAT entries, then close and reopen file to rewind it.

SSAT
- read all sectors specified in the MSAT
- ID is stored in the header.

DIR
- lookup Sector for root directory entry from Header
- build directory sector chain starting at this entry
- read root directory
-





